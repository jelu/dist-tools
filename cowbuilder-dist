#!/bin/sh -e

if [ -z "$dists" ]; then
    dists="bullseye bookworm sid"
fi

if [ -z "$archs" ]; then
    archs="i386 amd64"
fi

if [ -z "$KEY_ID" ]; then
    KEY_ID="4F23A0260F19DAC5"
fi

case "$1" in
    install )
        sudo apt-get install -y ubuntu-dev-tools cowbuilder debhelper dput
        mkdir -p ~/pbuilder/hooks ~/pbuilder/local
        cat >~/.pbuilderrc <<EOF
HOOKDIR="$HOME/pbuilder/hooks"
BINDMOUNTS="$HOME/pbuilder/local"
EOF
        exit 0
        ;;

    create | update)
        for dist in $dists; do
            for arch in $archs; do
                echo ""
                echo ""
                echo "*******************************************************************************"
                echo "Doing $1 for distribution $dist arch $arch"
                echo "*******************************************************************************"
                echo ""
                cowbuilder-dist "$dist" "$arch" "$@" || {
                    echo ""
                    echo "****************************************"
                    echo "             FAILED $1"
                    echo "****************************************"
                    echo ""
                    exit 2
                }
            done
        done
        exit 0
        ;;
esac

for file in $@; do
    case "$file" in
        *_source.changes )
            dist=$(grep '^Distribution: ' -- "$file" | awk '{print $2}')

            if [ -z "$dist" ]; then
                echo "No distribution found in $file"
                exit 1
            fi

            file=$(basename -- "$file" _source.changes).dsc
            if [ ! -r "$file" ]; then
                echo "File $file does not exists"
                exit 1
            fi

            tarch=$(grep '^Architecture: ' -- "$file" | cut -d ' ' -f 2-)
            tarchs="$archs"
            case "$tarch" in
                all )
                    tarchs="amd64"
                    ;;
                any )
                    ;;
                * )
                    tarchs="$tarch"
                    ;;
            esac
            for arch in $tarchs; do
                echo ""
                echo ""
                echo "*******************************************************************************"
                echo "Building $file for distribution $dist on $arch arch"
                echo "*******************************************************************************"
                echo ""
                cowbuilder-dist "$dist" "$arch" build "$file" || {
                    echo ""
                    echo "****************************************"
                    echo "             FAILED build"
                    echo "****************************************"
                    echo ""
                    exit 2
                }
            done
            ;;

        * )
            echo "Unknown file $file"
            exit 1
            ;;
    esac
done

echo "ok"
