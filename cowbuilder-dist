#!/bin/sh -e

if [ -z "$dists" ]; then
	dists="jessie stretch sid"
fi

if [ -z "$archs" ]; then
	archs="i386 amd64"
fi

if [ -z "$KEY_ID" ]; then
	KEY_ID="4F23A0260F19DAC5"
fi

if [ -z "$2" ]; then
	case "$1" in
		install )
			sudo apt-get install -y ubuntu-dev-tools cowbuilder debhelper dput
			mkdir -p ~/pbuilder/hooks ~/pbuilder/local
			cat >~/pbuilder/hooks/D05local <<EOF
#!/bin/sh -e
if [ -f "/home/prox/pbuilder/local/\$DIST/Packages" ]; then
  echo "deb [trusted=yes] file:///home/prox/pbuilder/local/\$DIST ./" | tee /etc/apt/sources.list.d/local.list
  apt-get update -o Dir::Etc::sourcelist="sources.list.d/local.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
fi
EOF
            chmod +x ~/pbuilder/hooks/D05local
            cat >~/pbuilder/local/update <<EOF
#!/bin/sh -e
for dist in $dists; do
  (cd \$dist && apt-ftparchive packages . >Packages)
done
EOF
            chmod +x ~/pbuilder/local/update
			exit 0
			;;

		create | update)
			for dist in $dists; do
				for arch in $archs; do
					echo ""
					echo ""
					echo "*******************************************************************************"
					echo "Doing $1 for distribution $dist arch $arch"
					echo "*******************************************************************************"
					echo ""
					cowbuilder-dist "$dist" "$arch" "$1" || {
						echo ""
						echo "****************************************"
						echo "             FAILED $1"
						echo "****************************************"
						echo ""
					}
				done
			done
			exit 0
			;;
	esac
fi

for file in $@; do
	case "$file" in
		*_source.changes )
			dist=$(grep '^Distribution: ' -- "$file" | awk '{print $2}')

			if [ -z "$dist" ]; then
				echo "No distribution found in $file"
				exit 1
			fi

			file=$(basename -- "$file" _source.changes).dsc
			if [ ! -r "$file" ]; then
				echo "File $file does not exists"
				exit 1
			fi

			tarch=$(grep '^Architecture: ' -- "$file" | awk '{print $2}')
			tarchs="$archs"
			case "$tarch" in
				all )
					tarchs="amd64"
					;;
				any )
					;;
				* )
					tarchs="$tarch"
					;;
			esac
			for arch in $tarchs; do
				echo ""
				echo ""
				echo "*******************************************************************************"
				echo "Building $file for distribution $dist on $arch arch"
				echo "*******************************************************************************"
				echo ""
				cowbuilder-dist "$dist" "$arch" build "$file" || {
					echo ""
					echo "****************************************"
					echo "             FAILED build"
					echo "****************************************"
					echo ""
				}
			done
			;;

		* )
			echo "Unknown file $file"
			exit 1
			;;
	esac
done

echo "ok"
